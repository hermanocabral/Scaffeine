<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
using System.Collections.Generic;

namespace <#= Model.Namespace #>.Core.Model
{
    using System.Collections.ObjectModel;

    public partial class Category
    {
        private ICollection<Product> _products;
        private ICollection<ProductAttributeHeader> _attributeHeaders;
        private ICollection<ProductAttributeValue> _allowedVariants;

        public virtual ICollection<Product> Products
        {
            get { return _products ?? (_products = new Collection<Product>()); }
            set { _products = value; }
        }

        public virtual ICollection<ProductAttributeHeader> AttributeHeaders
        {
            get { return _attributeHeaders ?? (_attributeHeaders = new Collection<ProductAttributeHeader>()); }
            set { _attributeHeaders = value; }
        }

        public virtual ICollection<ProductAttributeValue> AllowedVariants
        {
            get { return _allowedVariants ?? (_allowedVariants = new Collection<ProductAttributeValue>()); }
            set { _allowedVariants = value; }
        }
    }
}
