<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
namespace <#= Model.Namespace #>.Subscriptions.Recurly
{
    using System;
    using System.Web;
    using System.Xml;

    /// <summary>
    /// The recurly charge.
    /// </summary>
    public class RecurlyCharge : RecurlyLineItem
    {
        #region Constants

        /// <summary>
        /// The url postfix.
        /// </summary>
        private const string UrlPostfix = "/charges";

        #endregion

        #region Constructors and Destructors

        /// <summary>
        /// Initializes a new instance of the <see cref="RecurlyCharge"/> class.
        /// </summary>
        internal RecurlyCharge()
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RecurlyCharge"/> class.
        /// </summary>
        /// <param name="xmlReader">
        /// The xml reader.
        /// </param>
        internal RecurlyCharge(XmlTextReader xmlReader)
        {
            this.ReadXml(xmlReader);
        }

        #endregion

        #region Properties

        /// <summary>
        /// XML root node name. Override for "credit".
        /// </summary>
        protected override string XmlRootNodeName
        {
            get
            {
                return "charge";
            }
        }

        #endregion

        #region Public Methods and Operators

        /// <summary>
        /// The charge account.
        /// </summary>
        /// <param name="accountCode">
        /// The account code.
        /// </param>
        /// <param name="amountInCents">
        /// The amount in cents.
        /// </param>
        /// <param name="description">
        /// The description.
        /// </param>
        /// <returns>
        /// The <#= Model.Namespace #>.Subscriptions.Recurly.RecurlyCharge.
        /// </returns>
        public static RecurlyCharge ChargeAccount(string accountCode, int amountInCents, string description)
        {
            var charge = new RecurlyCharge();
            charge.AmountInCents = amountInCents;
            charge.StartDate = DateTime.UtcNow;
            charge.Description = description;

            /* HttpStatusCode statusCode = */
            RecurlyClient.PerformRequest(
                RecurlyClient.HttpRequestMethod.Post, ChargesUrl(accountCode), charge.WriteXml, null);

            return charge;
        }

        /// <summary>
        /// The equals.
        /// </summary>
        /// <param name="obj">
        /// The obj.
        /// </param>
        /// <returns>
        /// The System.Boolean.
        /// </returns>
        public override bool Equals(object obj)
        {
            if (obj is RecurlyCharge)
            {
                return this.Equals((RecurlyCharge)obj);
            }
            else
            {
                return false;
            }
        }

        /// <summary>
        /// The equals.
        /// </summary>
        /// <param name="charge">
        /// The charge.
        /// </param>
        /// <returns>
        /// The System.Boolean.
        /// </returns>
        public bool Equals(RecurlyCharge charge)
        {
            return this.Id == charge.Id;
        }

        /// <summary>
        /// The get hash code.
        /// </summary>
        /// <returns>
        /// The System.Int32.
        /// </returns>
        public override int GetHashCode()
        {
            return this.Id.GetHashCode();
        }

        /// <summary>
        /// The to string.
        /// </summary>
        /// <returns>
        /// The System.String.
        /// </returns>
        public override string ToString()
        {
            return "Recurly Charge: " + this.Id;
        }

        #endregion

        #region Methods

        /// <summary>
        /// The charges url.
        /// </summary>
        /// <param name="accountCode">
        /// The account code.
        /// </param>
        /// <returns>
        /// The System.String.
        /// </returns>
        internal static string ChargesUrl(string accountCode)
        {
            return RecurlyAccount.UrlPrefix + HttpUtility.UrlEncode(accountCode) + UrlPostfix;
        }

        #endregion
    }
}