<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
namespace <#= Model.Namespace #>.Organizations
{
    using System;
    using System.Configuration.Provider;

    public partial class OrganizationProviderCollection : ProviderCollection
    {
        public new OrganizationProvider this[string name]
        {
            get { return (OrganizationProvider)base[name]; }
        }

        public override void Add(ProviderBase provider)
        {
            if (provider == null)
                throw new ArgumentNullException("provider");

            if (!(provider is OrganizationProvider)) throw new ArgumentException("Invalid provider type", "provider");

            base.Add(provider);
        }
    }
}
