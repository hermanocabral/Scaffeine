<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
namespace <#= Model.Namespace #>.Core.Common.Organizations
{
    using System.Configuration.Provider;
    using System.Web.Configuration;
    using Configuration;
    using Configuration.Organizations;

    public partial class OrganizationManager
    {
        private static readonly object _lock = new object();
        private static OrganizationProvider _provider;
        private static OrganizationProviderCollection _providers;

        public static OrganizationProvider Provider
        {
            get
            {
                LoadProviders();
                return _provider;
            }
        }

        public static OrganizationProviderCollection Providers
        {
            get
            {
                LoadProviders();
                return _providers;
            }
        }


        private static void LoadProviders()
        {
            if (_provider == null)
            {
                lock (_lock)
                {
                    if (_provider == null)
                    {
                        var section = CoreSection.GetConfig().Organization;

                        _providers = new OrganizationProviderCollection();
                        ProvidersHelper.InstantiateProviders(section.Providers, _providers, typeof(OrganizationProvider));
                        _provider = _providers[section.DefaultProvider];

                        if (_provider == null)
                            throw new ProviderException("Unable to load default OrganizationProvider");
                    }
                }
            }
        }
    }
}